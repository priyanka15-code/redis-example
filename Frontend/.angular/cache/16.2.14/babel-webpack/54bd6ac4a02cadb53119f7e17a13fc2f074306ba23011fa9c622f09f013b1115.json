{"ast":null,"code":"import * as AuthActions from './store/auth/auth.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ngrx/store\";\nimport * as i3 from \"ngx-cookie-service\";\nexport class LoginService {\n  constructor(http, store, cookieService) {\n    this.http = http;\n    this.store = store;\n    this.cookieService = cookieService;\n    this.apiUrl = 'http://localhost:3000/api/auth';\n    this.cookieKey = 'authToken';\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      username,\n      password\n    });\n  }\n  register(username, password, email) {\n    return this.http.post(`${this.apiUrl}/register`, {\n      username,\n      password,\n      email\n    });\n  }\n  logout() {\n    this.cookieService.delete(this.cookieKey);\n    this.store.dispatch(AuthActions.logout());\n  }\n  getToken() {\n    return this.cookieService.get(this.cookieKey);\n  }\n  isAuthenticated() {\n    const token = this.getToken();\n    return !!token;\n  }\n  setToken(token) {\n    this.cookieService.set(this.cookieKey, token);\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Store), i0.ɵɵinject(i3.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthActions","LoginService","constructor","http","store","cookieService","apiUrl","cookieKey","login","username","password","post","register","email","logout","delete","dispatch","getToken","get","isAuthenticated","token","setToken","set","_","i0","ɵɵinject","i1","HttpClient","i2","Store","i3","CookieService","_2","factory","ɵfac","providedIn"],"sources":["/home/devmonk--/thime/ngrxex/Frontend/src/app/login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthState } from './store/auth/auth.reducer';\nimport * as AuthActions from './store/auth/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private apiUrl = 'http://localhost:3000/api/auth';\n  private cookieKey = 'authToken';\n\n  constructor(private http: HttpClient, private store: Store<AuthState>,  private cookieService: CookieService) {}\n\n\n\n  login(username: string, password: string): Observable<{ token: string }> {\n    return this.http.post<{ token: string }>(`${this.apiUrl}/login`, { username, password });\n  }\n\n  register(username: string, password: string, email: string): Observable<{ message: string }> {\n    return this.http.post<{ message: string }>(`${this.apiUrl}/register`, { username, password, email });\n  }\n\n\n  logout(): void {\n    this.cookieService.delete(this.cookieKey);\n    this.store.dispatch(AuthActions.logout());\n  }\n\n  getToken(): string | null {\n    return this.cookieService.get(this.cookieKey);\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.getToken();\n    return !!token;\n  }\n  setToken(token: string): void {\n    this.cookieService.set(this.cookieKey, token);\n  }\n}\n"],"mappings":"AAIA,OAAO,KAAKA,WAAW,MAAM,2BAA2B;;;;;AAOxD,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB,EAAUC,KAAuB,EAAWC,aAA4B;IAAxF,KAAAF,IAAI,GAAJA,IAAI;IAAsB,KAAAC,KAAK,GAALA,KAAK;IAA6B,KAAAC,aAAa,GAAbA,aAAa;IAHrF,KAAAC,MAAM,GAAG,gCAAgC;IACzC,KAAAC,SAAS,GAAG,WAAW;EAEgF;EAI/GC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAoB,GAAG,IAAI,CAACL,MAAM,QAAQ,EAAE;MAAEG,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EAC1F;EAEAE,QAAQA,CAACH,QAAgB,EAAEC,QAAgB,EAAEG,KAAa;IACxD,OAAO,IAAI,CAACV,IAAI,CAACQ,IAAI,CAAsB,GAAG,IAAI,CAACL,MAAM,WAAW,EAAE;MAAEG,QAAQ;MAAEC,QAAQ;MAAEG;IAAK,CAAE,CAAC;EACtG;EAGAC,MAAMA,CAAA;IACJ,IAAI,CAACT,aAAa,CAACU,MAAM,CAAC,IAAI,CAACR,SAAS,CAAC;IACzC,IAAI,CAACH,KAAK,CAACY,QAAQ,CAAChB,WAAW,CAACc,MAAM,EAAE,CAAC;EAC3C;EAEAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAACZ,aAAa,CAACa,GAAG,CAAC,IAAI,CAACX,SAAS,CAAC;EAC/C;EAEAY,eAAeA,CAAA;IACb,MAAMC,KAAK,GAAG,IAAI,CAACH,QAAQ,EAAE;IAC7B,OAAO,CAAC,CAACG,KAAK;EAChB;EACAC,QAAQA,CAACD,KAAa;IACpB,IAAI,CAACf,aAAa,CAACiB,GAAG,CAAC,IAAI,CAACf,SAAS,EAAEa,KAAK,CAAC;EAC/C;EAAC,QAAAG,CAAA,G;qBAjCUtB,YAAY,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,KAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ/B,YAAY;IAAAgC,OAAA,EAAZhC,YAAY,CAAAiC,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}